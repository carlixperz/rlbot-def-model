const Discord = require("discord.js");

const { Command } = require('../../commands.js')
module.exports = class HelpCommand extends Command {
  constructor(){
    super({
      name: 'help',
      aliases: 'h',
      priority: 1,
      permLvl: 0
    })
  }
  execute(msg){
    const indice1 = new Discord.MessageEmbed()
    .setTitle('üõ° | Ayuda')
    .setColor("WHITE")
    .setDescription('**RLbot v3.0 by CarlixDev - Lista de comandos**')
    .addField('üîß**-Sobre el bot**', " Muestra algunos de los comandos sobre el bot.")
    .addField('ü§ù**-Interacci√≥n**', " Muestra los comandos de interacci√≥n disponibles.")
    .addField('üì∑**-Im√°genes**', " Muestra comandos que ense√±an im√°genes aleatorias.")
    .addField('üì±**-Entretenimiento**', " Muestra algunos comandos para entretenerse y perder el tiempo. ")
    .addField('üëÄ**-Ocultos**', " Muestra algunos comandos un poco escondidos.")
    .addField('**Servidor de Soporte: **', `[RLBot Support](https://discord.gg/dwQsP2ssQR)`)
      
    
    const help_bot = new Discord.MessageEmbed()
    .setTitle('üîß | Ayuda')
    .setDescription('Comandos del bot')
    .setColor("#afafaf")
    .addField("**rl!help**", "Lista¬†de¬†comandos")
    .addField("**rl!invite**", "Invita al bot a tu servidor")
    .addField("**rl!donate**", "Dona dinero al desarrollador para que no se muera de hambre")
    .addField("**rl!changelog**", "Muestra la lista de cambios del bot en la √∫ltima versi√≥n.")
    .addField("**rl!buglist**", "Muestra la lista de bugs reportados.")
    .setFooter(`Usa üåé para volver al √≠ndice`)
    
 const help_inter = new Discord.MessageEmbed()
    .setTitle('ü§ù | Ayuda')
    .setDescription('Comandos de interacci√≥n')
    .setColor("#ffce00")
    .addField("**rl!blush**", "Sonr√≥jate, ya sabemos lo que significa...")
    .addField("**rl!confused**", "Si√©ntete confundido/a.")
    .addField("**rl!cry**", "Llora, no est√° mal hacerlo...")
    .addField("**rl!dance**", "Baila (o int√©ntalo)")
    .addField("**rl!feed**", "Sacia el hambre de alguien.")
    .addField("**rl!happy**", "¬°Siente la maravillosa sensaci√≥n de felicidad!")
    .addField("**rl!hi**", "Saluda a alguien, no seas descort√©s.")
    .addField("**rl!hug**", "Abraza a alguien... ¬°n-no tan fuerte!")
    .addField("**rl!kill**", "Mata a alguien. Te aconsejo no hacerlo.")
    .addField("**rl!kiss**", "Besa a alguien... Pero no os enroll√©is demasiado.")
    .addField("**rl!lick**", "Lame a alguien, pero no te pases de la raya...")
    .addField("**rl!pat**", "Acaricia a alguien  (o a m√≠)")
    .addField("**rl!punch**", "P√©gale un pu√±etazo a quien quieras, pero aseg√∫rate de tener motivos.")
    .addField("**rl!slap**", "¬°D√©jale la cara roja a alguien de una bofetada!")
    .addField("**rl!sleep**", "Es hora de dormir, buenas noches.")
    .setFooter(`Usa üåé para volver al √≠ndice`)
 
 const help_image = new Discord.MessageEmbed()
    .setTitle('üì∑ | Ayuda')
    .setDescription('Comandos de generaci√≥n de Im√°genes')
     .setColor("#292929")
     .addField("**rl!avatar**", "Muestra tu avatar o el de alguien...")
     .addField("**rl!cat**", "Muestra una imagen de un gato")
     .addField("**rl!dog**", "Muestra una imagen de un perro")
     .addField("**rl!fox**", "Muestra una imagen de un zorro")
     .addField("**rl!panda**", "Muestra una imagen de un oso panda")
     .addField("**rl!bird**", "Muestra una imagen de un p√°jaro")
     .addField("**rl!koala**", "Muestra una imagen de un koala")
    .setFooter(`Usa üåé para volver al √≠ndice`)
    
    const help_fun = new Discord.MessageEmbed()
    .setTitle('üì± | Ayuda')
    .setDescription('Comandos de entretenimiento')
    .setColor("#0088ff")
    .addField("**rl!chat**", "Para charlar un poco")
    .addField("**rl!rate**", "Para valorar cosas del 0 a 10")
    .addField("**rl!dicksize**", "Para¬†medir¬†tama√±os¬†de¬†rabo")
    .addField("**rl!howgay**", "Para saber c√≥mo de gay es alguien")
    .addField("**rl!8ball**", "Pregunta y yo respondo")
    .addField("**rl!randomuser**", "Para elegir un usuario al azar")
    .addField("**rl!love**", "Mide la compatibilidad amorosa entre un usuario y t√∫ mismo")
    .addField("**rl!rps**", "Juega al cl√°sico piedra, papel, tijeras contra m√≠ >:3")
    .addField("**rl!letter**", "Env√≠ale una carta a un usuario del servidor. `Comando en revisi√≥n`")
    .setFooter(`Usa üåé para volver al √≠ndice`)
    
const help_hide = new Discord.MessageEmbed()
    .setTitle('üëÄ | Ayuda')
    .setDescription('Comandos semiocultos')
    .setColor("BLACK")
    .addField("**Comandos secretos**", " Los comandos secretos ser√°n activados en pr√≥ximas versiones.") 
    .setFooter(`Usa üåé para volver al √≠ndice`)


   
      msg.channel.send(indice1).then(m => {
        m.react('üåé')
        m.react('üîß')
        m.react('üì∑')
        m.react('ü§ù')
        m.react('üì±')
        m.react('üëÄ')
        m.awaitReactions((reaction, user) => {
            const userReactions = m.reactions.cache.filter(reaction => reaction.users.cache.has(user.id));
            if(msg.author.id !== user.id) return; 
    
            if(reaction.emoji.name === 'üîß') { 
                try {
	                for (const reaction of userReactions.values()) {
		            reaction.users.remove(user.id);
                }
            } catch(error) { console.error(error) }
                m.edit(help_bot);
            }
            if(reaction.emoji.name === 'ü§ù') {
                try {
	                for (const reaction of userReactions.values()) {
		            reaction.users.remove(user.id);
                }
            } catch(error) { console.error(error) }
                m.edit(help_inter);
            }
             if(reaction.emoji.name === 'üì∑') {
                try {
	                for (const reaction of userReactions.values()) {
		            reaction.users.remove(user.id);
                }
            } catch(error) { console.error(error) }
                m.edit(help_image);
            }
            if(reaction.emoji.name === 'üåé') { 
                try {
	                for (const reaction of userReactions.values()) {
		            reaction.users.remove(user.id); 
                }
            } catch(error) { console.error(error) }
                m.edit(indice1); 
            }
if(reaction.emoji.name === 'üì±') { 
                try {
	                for (const reaction of userReactions.values()) {
		            reaction.users.remove(user.id); 
                }
            } catch(error) { console.error(error) }
                m.edit(help_fun); 
            }
if(reaction.emoji.name === 'üëÄ') { 
                try {
	                for (const reaction of userReactions.values()) {
		            reaction.users.remove(user.id); 
                }
            } catch(error) { console.error(error) }
                m.edit(help_hide); 
            }
        })
    })
    
  }
}